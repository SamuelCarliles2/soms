export enum FooType {
    FOO = "FOO",
    BAR = "BAR",
    BAZ = "BAZ"
}

export class FooBurglar {
    // this stuff works
    static readonly DEFAULT_WIN: boolean = false;
    static readonly DEFAULT_NAME: string = "fooFace";
    static readonly DEFAULT_FOO_TYPE = FooType.BAR;

    // if you want doubles picked up as doubles,
    // you had better put a dot in the literal value
    static readonly DEFAULT_QUX: double = 0.0;

    // TODO: FIX THIS
    // for now int64 is really just TS number,
    // which is just JS number,
    // which is 64-bit double,
    // so don't run off the end of it until we fix this.
    // otherwise you should be ok
    static readonly DEFAULT_BAZ: int64 = 128;

    // for now static const field values must be defined and not null,
    // so don't do this
    // static readonly NOPE: string = null;

    // for now we're going to stick with boolean | int64 | double | string | enum values,
    // so don't do either of these
    // static readonly DEFAULT_ARRAY: string[] = ["not", "today", "sorry"];
    // static readonly DEFAULT_MY_OBJECT = new FooGargle("where's that smoke coming from");

    // this all works
    name: string;
    yearOfBirth: int64;
    fooType: FooType;
    heightInKm: double;
    aliases: string[];
    aliasAliases: string[][];
    threedeeDouble: double[][][];
    intsAPoppin: int64[][][];
}
